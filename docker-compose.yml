version: '3'

services:
  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    expose:
      - 27017

  postgresdb:
    container_name: postgresdb
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=api
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=api
    expose:
      - 5432
    # ports:
    #   - 5432:5432
    volumes:
      - ./backend/pgsql/pgdata:/var/lib/postgresql/data
      - ./backend/pgsql/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./backend/pgsql/init.sql:/docker-entrypoint-initdb.d/2-init.sql
    # network_mode: host
    # networks:
    #   - host
  
  java:
    container_name: java
    build:
      context: ./backend/java/api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/api
      - SPRING_DATASOURCE_USERNAME=api
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    
    depends_on:
      - postgresdb
    # networks:
    #   - host

  nodejs:
    container_name: nodejs
    image: nodejs_app:latest
    restart: always
    build:
      context: ./backend/nodejs
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    # ports:
    #   - 3000:3000
    volumes:
      - ./backend/nodejs:/var/www/html
    environment:
      - DB_HOST=mongodb
      - DB_USERNAME=root
      - DB_PASSWORD=root

    depends_on:
      - mongodb
    # network_mode: host
    # networks:
    #   - host

volumes:
  postgresql_data:
    driver: local

networks:
  host:
    driver: bridge
